{"wrkspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">my variable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"-10\" y=\"-10\"></block><block type=\"v5_events_when_autonomous\" id=\"y)n):)-6lhx,qkLtf#Zn\" x=\"190\" y=\"-10\"></block><block type=\"v5_events_when_driver\" id=\"2sxv[tBvb/TOc3zh^a$R\" x=\"430\" y=\"-10\"><next><block type=\"v5_control_forever\" id=\"F.tPZ%Bi}Wa/I(0.4jnV\"></block></next></block></xml>","rconfig":[],"slot":0,"cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"v5.h\"\n#include \"v5_cpp.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n// Robot configuration code.\nvex::competition Competition;\n\n\n\n//Vision sensor index vars.\nint Vision1_objectIndex = 0;\n\nint Brain_precision;\n\n\n// Generated code.\n\nfloat my_variable;\n\nint whenStarted1() {\nreturn 0;\n}\n\nint onauton_autonomous_0() {\nreturn 0;\n}\n\nint ondriver_drivercontrol_0() {\n  while (true) {\n  task::sleep(5);\n  }\nreturn 0;\n}\nvoid VEXcode_driver_task() {\n// Start the driver control tasks....\nvex::task drive0(ondriver_drivercontrol_0);\n\n\nwhile(Competition.isDriverControl() && Competition.isEnabled()) {this_thread::sleep_for(10);}\ndrive0.stop();\nreturn;\n}\n\nvoid VEXcode_auton_task() {\n// Start the auton control tasks....\nvex::task auto0(onauton_autonomous_0);\nwhile( Competition.isAutonomous() && Competition.isEnabled()) {this_thread::sleep_for(10);}\nauto0.stop();\nreturn;\n}\n\n\n\nint main() {\n  vex::competition::bStopTasksBetweenModes = false;\n  Competition.autonomous(VEXcode_auton_task);\n  Competition.drivercontrol(VEXcode_driver_task);\n\n  srand(vex::timer::system());\n\n\n\n  // pre event registration\n  // register event handlers\n\n  task::sleep(15);\n  // post event registration\n\n  // when started blocks...\n\n  whenStarted1();\n  return 0;\n}","cppStatus":"true","platform":"V5","sdkVersion":"20190805.09.00.00","appVersion":"1.0.4-8","fileFormat":"0.1.1","icon":""}